<?php
/**
 * Created by PhpStorm.
 * User: dodo
 * Date: 2016/8/1
 * Time: 21:18
 */

namespace App\Background\Controllers;

use Plugin\Core\QSTBaseSearch;
use App\Background\Forms\UserForm;
use Phalcon\Mvc\Model\Criteria;
use Phalcon\Paginator\Adapter\Model as Paginator;
use Phalcon\Mvc\View;

/**
 * Display the default index page.
 */
class IndexController extends BaseController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $menu = $this->menu;
        $menu['index']['link_action'] = "";
        $menu['index']['active'] = true;
        $this->view->menu_root = $menu;
        $this->view->nav_menu = array_merge(array($this->view->nav_menu, array("name" => "客户管理列表", "link" => "admin")));
        $this->assets->addCss('public/static/background/css/common.css');
    }

    public function indexAction()
    {
        $this->response->redirect("admin/Member/search");
    }

    public function searchAction()
    {
        if($this->request->isPost()){
            $this->log($this->request->getPost());
        }
        // 加载CSS和JS资源
        $this->assets->addCss(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker3.min.css', false)
            ->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js', false)
            ->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/locales/bootstrap-datepicker.zh-CN.min.js', false)
            ->addJs(_LIBS_ . 'libs/jsapi/qst_date_init.js', false);
//        $this->assets->addJs("public/static/background/js/thumbnail_init.js");

        // 数据-页头
        $pageHeader["title"] = "角色管理列表";
        $pageHeader["action"]["name"] = '<span class="fa fa-plus">&nbsp;&nbsp;添加客户</span>';;
        $pageHeader["action"]["link"] = "admin/index/new";
        $this->view->page_header = $pageHeader;

        // 数据-搜索栏
        $page_search = new QSTBaseSearch("admin/index/search");
        // 第一种方式，定义条件变量，并对变量进行赋值，然后调用addCondition将其加入到插件-搜索栏中
        $condition_key = "condition_select";
        $condition_select["type"] = 1;
        $condition_select["label"] = "选择型条件";
        $condition_select["key"] = $condition_key;
        $condition_select["options"] = [0=>"条件1", 1=>"条件2", 2=>"条件3"];
        $condition_select["value"] = 1;
        $page_search->addCondition($condition_select);

        // 第二种方式，addCondition中直接使用数组赋值方式（建议）
        $page_search->addCondition([
            "type" => 2,
            "date_type" => 0,
            "label" => "日期",
            "data" => [
                "key" => "date",
                "value" => "1982-07-16"
            ]
        ]);

        $page_search->addCondition([
            "type" => 2,
            "date_type" => 1,
            "label" => "起止日期",
            "data_start" => [
                "key" => "d_start",
                "value" => "1982-07-16"
            ],
            "data_end" => [
                "key" => "d_end",
                "value" => "1982-07-17"
            ],
        ]);

        // search_key 和 search_value是预定义参数名称，不可修改
        $key = $this->request->getQuery("search_key");
        $value = $this->request->getQuery("search_value");
        $page_search->addCondition([
            "type" => 0,
            "keys" => [
                "tel"=>"手机",
                "company" => "公司",
                "contactor" => "联系人",
                "oph" => "座机"
            ],
            "key_default" => $key,
            "value_default" => $value,
        ]);
        // 搜索栏-传递数据到页面
        $this->view->page_search = $page_search->toArray();

        // 构造查询条件
        $where = $page_search->toWhereEx(function($key) {
            if ($key == "condition_select") {
//                $key = 模型类名 + 数据库对应的字段名称，如下
//                $key = Users::class . ".id";
            }
            // 默认名称等于字段名称
            return $key;
        }, null, function($key, $value) {
            $ret = null;
            if ($key == "date") {
//                自定义搜索条件如下
//                $ret = CompanyDemand::class . ".date > " . $value;
            }
            // 默认不加入筛选条件
            return $ret;
        });

        // 调用模型方法，传入查询条件
//        Users::findUsers($where);

        // 定义表格字段
        $tb_ths = [];
        $tb_ths[] = array("name"=>"头像", "width"=>"80");
        $tb_ths[] = array("name"=>"手机", "width"=>"100");
        $tb_ths[] = array("name"=>"公司");
        $tb_ths[] = array("name"=>"联系人", "width"=>"100");
        $tb_ths[] = array("name"=>"城市", "width"=>"100");
        $tb_ths[] = array("name"=>"销售代表", "width"=>"100");
        $tb_ths[] = array("name"=>"注册时间", "width"=>"180");
        $tb_ths[] = array("name"=>"操作", "class"=>"text-center", "width"=>"150");

        // 定义表格操作
//        $actions = ["0"=>["name"=>"启用"], "1"=>["name"=>"禁用"]];
        $op = array(
            ["id_pre"=>"et_", "name"=>"编辑_新窗口", "link"=>"admin/index/edit", "target"=>"_blank"],
            ["id_pre"=>"et_", "name"=>"编辑", "link"=>"admin/index/edit", "target"=>"_self"],
            ["id_pre"=>"del_", "name"=>"删除", "link"=>"admin/index/delete", "method"=>"post"]
        );

        $data = $this->test_dataMake();
        $using = array(
            ["field" => 'head', "type"=>"image"],
            ["field" => "tel"],
            ["field" => "company_name"],
            ["field" => 'vname'],
            ["field" => 'livecity'],
            ["field" => 'sales'],
            ["field" => 'time']
        );

        // 定义使用数据
        $tb_trs = array(
            "data" => $data,
            "using" => $using,
            "op" => $op
        );

        // 数据-表格列表
        $page_table["ths"] = $tb_ths;
        $page_table["trs"] = $tb_trs;
        $this->view->page_table = $page_table;

        // 页码
//        $params = $this->request->getQuery();
        $pagination_cur = $this->request->getQuery("page", null, 1);
        $uriStr = $this->request->getURI();
        $uriArray = parse_url($uriStr);
        $queryStr = $uriArray['query'];
        parse_str($queryStr, $queryArray);
        $queryArray['page'] = "";
        $page_pagination = [
            "url" => $this->url->get("admin/index/search?" . http_build_query($queryArray)),
            "cur" => $pagination_cur,
            "total" => 10,
            "rows_value" => 10,
        ];
        $this->view->tb_page = $page_pagination;

        // 使用普通模板
        $this->view->pick("public/list_pagination_ex");
    }

    public function newAction()
    {
        $this->assets->addJs(_LIBS_ . "libs/jsapi/editor_init.js", false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/qst_fileinput_init.js', false);
        // 数据-页头
        $pageHeader["title"] = "添加客户";
        $pageHeader["action"]["name"] = "客户列表";
        $pageHeader["action"]["link"] = "admin/index";
        $this->view->page_header = $pageHeader;

        // 导航菜单
        $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));

        // 表单数据
        $form = new UserForm();
        $form->setAction("admin/index/create");
        $this->view->form = $form;
        $this->view->pick("partials/tp_page_form");
    }

    public function createAction()
    {
        if ($this->request->isPost()) {
            // 1. 创建一个新的数据

            // 2. 调用模型的 save
            return $this->ajax_return(0, "success");
        }

        return $this->ajax_return(1, "");
    }

    public function editAction()
    {
        $this->addLibJs("libs/jsapi/editor_init.js");
        $this->addLibJs("libs/jsapi/qst_fileinput_init.js");
        // 数据-页头
        $pageHeader["title"] = "编辑客户";
        $pageHeader["action"]["name"] = "客户列表";
        $pageHeader["action"]["link"] = "admin/index";
        $this->view->page_header = $pageHeader;

        // 导航菜单
        $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));

        // TODO 数据关联ID
        $id = $this->request->getQuery("id");

        // TODO 根据关联ID获取数据
        $id_uploader_value[] = "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg";
        $userData = [
            "id_text" => "单行文本初始值",
            "id_area" => "多行文本初始值",
            "id_check" => true,
            "id_editor" => "<p>富文本初始值<strong>提示</strong></p>",
            "id_uploader" => json_encode($id_uploader_value),
            "head" => json_encode([
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg"
            ]),
            "date_start" => "1982-08-28",
            "date_end" => "1982-08-28",
            "static" => "你干什么的",
            "audio" => json_encode([
                "/webprj/public/files/media/T283.mp3",
                "/webprj/public/files/media/T284.mp3",
                "/webprj/public/files/media/T283.mp3"
            ])
        ];

        // 表单数据
        $form = new UserForm($userData);
        $form->setAction("admin/index/edit");
        $this->view->form = $form;
        $this->view->pick("partials/tp_page_form");
    }

    public function saveAction()
    {
        if ($this->request->isPost()) {
            // TODO 根据ID获取模型数据
            $id = $this->request->getPost('id');
            $modal = null;
            //  获取表单数据
            $data = $this->request->getPost();

            // 表单数据监测
            $form = new UserForm();
            if (!$form->isValid($data, $modal)) {
                foreach ($form->getMessages() as $message) {
                    break;
                }
                return $this->ajax_return(2, $message);
            }

            return $this->ajax_return(0, "success");
        }

        return $this->ajax_return(1, "");
    }

    private function test_dataMake()
    {
        $ret = [];
        for ($i = 0; $i < 9; $i++) {
            $row['id'] = $i;
            $row['head'] = "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg";
            $row['tel'] = "13888880000";
            $row['company_name'] = "北京骑士团科技有限公司";
            $row['vname'] = "苗刚";
            $row['zhtel'] = "010-10001000";
            $row['livecity'] = "北京";
            $row['sales'] = "10001";
            $row['time'] = "2012-04-04 12:00:00";
            $row['operation'] = "2012-04-04 12:00:00";
            $ret[] = $row;
        }
        return $ret;
    }

    public function uploadAction()
    {
        // Check if the user has uploaded files
        $data = [];
        if ($this->request->hasFiles()) {
            foreach ($this->request->getUploadedFiles() as $file) {
                $fileUrl = $this->upload->upload($file);
                $data['out_data']['url'][] = $fileUrl;
            }
        }
        return $this->responseJson($data, 0);
    }

    public function tabAction()
    {
        // 数据-页头
        $pageHeader["title"] = "角色管理列表";
        $this->view->page_header = $pageHeader;
        $this->addLibJs("libs/jsapi/editor_init.js");
        $this->addLibJs("libs/jsapi/qst_fileinput_init.js");
        $id_uploader_value[] = "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg";
        $userData = [
            "id_text" => "单行文本初始值",
            "id_area" => "多行文本初始值",
            "id_check" => true,
            "id_editor" => "<p>富文本初始值<strong>提示</strong></p>",
            "id_uploader" => json_encode($id_uploader_value),
            "head" => json_encode([
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg",
                "/webprj/uploadfile/2016/09/03/0b9301ae2f54c189e5f12d0e56d46d44f1aa6e85.jpg"
            ]),
            "date_start" => "1982-08-28",
            "date_end" => "1982-08-28",
            "static" => "你干什么的",
            "audio" => json_encode([
                "/webprj/public/files/media/T283.mp3",
                "/webprj/public/files/media/T284.mp3",
                "/webprj/public/files/media/T283.mp3"
            ])
        ];

        $tabs = [
            ["id" => "home", "name" => "首页", "active" => true, "form" => new UserForm($userData)],
            ["id" => "info", "name" => "介绍", "form" => new UserForm($userData)],
            ["id" => "test", "name" => "测试", "form" => new UserForm($userData)]
        ];

        $this->view->tabs = $tabs;
        $this->view->pick("partials/tp_page_tabs");
    }

    public function tabexAction()
    {
        $this->assets->addCss(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker3.min.css', false);
        $this->assets->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/locales/bootstrap-datepicker.zh-CN.min.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/qst_date_init.js', false);


        $tab_data["tabs"] = [
            [
                "link" => $this->url->get("/admin/index/tabex"),
                "name" => "首页", "active" => true
            ],

            [
                "link" => $this->url->get("/admin/index/tabex"),
                "name" => "介绍"
            ],

            [
                "link" => $this->url->get("/admin/index/tabex"),
                "name" => "测试"
            ],

            [
                "link" => $this->url->get("/admin/index/tabex"),
                "name" => "列表"
            ]
        ];
        $tab_data["view"] = "public/list_pagination_ex";

        // 数据-页头
        $pageHeader["title"] = "角色管理列表";
        $pageHeader["action"]["name"] = '<span class="fa fa-plus">&nbsp;&nbsp;添加客户</span>';;
        $pageHeader["action"]["link"] = "admin/index/new";
        $this->view->page_header = $pageHeader;

        // 数据-搜索栏
        $page_search["link"] = "admin/index/tabex";
        $condition_select["type"] = 1;
        $condition_select["label"] = "选择型条件";
        $condition_select["key"] = "condition_select";
        $condition_select["options"] = [0 => "条件1", 1 => "条件2", 2 => "条件3"];
        $condition_select["value"] = 1;
        $page_search["conditions"][] = $condition_select;


        $condition_select2["type"] = 1;
        $condition_select2["label"] = "选择型条件";
        $condition_select2["key"] = "condition_select2";
        $condition_select2["options"] = [0 => "条件1", 1 => "条件2", 2 => "条件3"];
        $condition_select2["value"] = 1;
        $page_search["conditions"][] = $condition_select2;

        $this->view->page_search = $page_search;

        // 定义表格字段
        $tb_ths = [];
        $tb_ths[] = array("name" => "头像", "width" => "80");
        $tb_ths[] = array("name" => "手机", "width" => "100");
        $tb_ths[] = array("name" => "公司");
        $tb_ths[] = array("name" => "联系人", "width" => "100");
        $tb_ths[] = array("name" => "城市", "width" => "100");
        $tb_ths[] = array("name" => "销售代表", "width" => "100");
        $tb_ths[] = array("name" => "注册时间", "width" => "180");
        $tb_ths[] = array("name" => "操作", "class" => "text-center", "width" => "150");

        // 定义表格操作
        $actions = ["0" => ["name" => "启用"], "1" => ["name" => "禁用"]];
        $op = array(
            ["id_pre" => "et_", "name" => "编辑_新窗口", "link" => "admin/index/edit", "target" => "_blank"],
            ["id_pre" => "et_", "name" => "编辑", "link" => "admin/index/edit", "target" => "_self"],
            ["id_pre" => "del_", "name" => "删除", "link" => "admin/index/delete", "method" => "post"]
        );

        $data = $this->test_dataMake();
        $using = array(
            ["field" => 'head', "type" => "image"],
            ["field" => "tel"],
            ["field" => "company_name"],
            ["field" => 'vname'],
            ["field" => 'livecity'],
            ["field" => 'sales'],
            ["field" => 'time']
        );

        // 定义使用数据
        $tb_trs = array(
            "data" => $data,
            "using" => $using,
            "op" => $op
        );

        // 数据-表格列表
        $page_table["ths"] = $tb_ths;
        $page_table["trs"] = $tb_trs;
        $this->view->page_table = $page_table;

        // 页码
//        $params = $this->request->getQuery();
        $pagination_cur = $this->request->getQuery("page", null, 1);
        $uriStr = $this->request->getURI();
        $uriArray = parse_url($uriStr);
        $queryStr = $uriArray['query'];
        parse_str($queryStr, $queryArray);
        $queryArray['page'] = "";
        $page_pagination = [
            "url" => $this->url->get("admin/index/search?" . http_build_query($queryArray)),
            "cur" => $pagination_cur,
            "total" => 10,
            "rows_value" => 10,
        ];
        $this->view->page_pagination = $page_pagination;

        $this->view->tab_data = $tab_data;
        $this->view->pick("partials/tp_page_tabs_ex");
    }

    public function tareasAction(){
        $data = array(
            'city' => array(
                0 => array(
                    array("id" => 0, "name" => "北京"),
                    array("id" => 1, "name" => "天津")
                )
            ),
            'county'=>array(
                0 =>array(
                    array("id" => 0, "name" => "朝阳"),
                    array("id" => 1, "name" => "昌平")
                ),
                1 => array(
                    array("id" => 2, "name" => "南开"),
                    array("id" => 3, "name" => "西青")
                )
            ),
            'town'=>array(
                0 => array(
                    array('id' => 0, "name"=>"望京"),
                    array('id' => 1, "name"=>"酒仙桥")
                ),
                1 => array(
                    array('id' => 2, "name"=>"立水桥"),
                    array('id' => 3, "name"=>"回龙观")
                ),
                2 => array(
                    array('id' => 4, "name"=>"地华里")
                ),
                3 => array(
                    array('id' => 6, "name"=>"杨柳青")
                )
            )
        );
        if($this->request->isGet()){
            $type = $this->request->getQuery('type');
            $pid = $this->request->getQuery('pid');

            if(!isset($pid)){
                $pid = 0;
            }
            $this->log($data[$type][$pid]);
            return $this->responseJson(array(
                'data'=>$data[$type][$pid]
            ));
        }else{
            return $this->reject();
        }
    }
}
