<?php
/**
 * Created by PhpStorm.
 * User: dodo
 * Date: 2016/8/1
 * Time: 21:18
 */

namespace App\Background\Controllers;

use App\Background\Forms\FranchiseForm;
use App\Models\Franchise;
use App\Models\MemberInfo;
use App\Models\PayLog;
use App\Models\Reflect;
use Plugin\Core\QSTBaseSearch;
use Plugin\Upload\Upload;
use App\Background\Forms\FranchiseIndexForm;
use App\Background\Forms\ReflectAddForm;
use Phalcon\Mvc\View;

/**
 * Display the default index page.
 */
class FranchiseController extends BaseController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $menu = $this->menu;
        $menu['franchise']['active'] = true;
        $menu['franchise']['link_action'] = "admin/franchise";
        $this->view->menu_root = $menu;
        $this->view->nav_menu = array_merge(array($this->view->nav_menu, array("name" => "加盟店管理", "link" => "admin/franchise")));
        $this->assets->addCss('public/static/background/css/common.css');
    }

    public function indexAction()
    {
        $this->response->redirect("admin/franchise/search");
    }

    public function searchAction()
    {
        $where = '';
        $rows_value = 10;   //一页显示多少条数据
        $key = $this->request->getQuery("search_key");
        $value = $this->request->getQuery("search_value");
        $page = $this->request->getQuery("page");

        // 加载CSS和JS资源
        $this->addLibJs("libs/jsapi/qst_linkpost.js");
        $this->addLibJs("libs/jsapi/table.js");
        $this->addLibJs("libs/js3party/bootstrap-terebentina-sco/1.0.2/js/sco.modal.js");
        $this->addLibJs("libs/js3party/bootstrap-terebentina-sco/1.0.2/js/sco.confirm.js");
        $this->assets->addCss(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker3.min.css', false)
            ->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js', false)
            ->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/locales/bootstrap-datepicker.zh-CN.min.js', false)
            ->addJs(_LIBS_ . 'libs/jsapi/qst_date_init.js', false);
//        $this->assets->addJs("public/static/background/js/thumbnail_init.js");
        // 数据-页头
        $pageHeader["title"] = "加盟店管理";
        $pageHeader["action"]["name"] = '<span class="fa fa-plus">&nbsp;&nbsp;加盟店</span>';;
        $pageHeader["action"]["link"] = "admin/franchise/new";
        $this->view->page_header = $pageHeader;

        // 数据-搜索栏
        $page_search = new QSTBaseSearch("admin/franchise/search");

        $page_search->addCondition([
            'type' => 0,
            'key_default' => '',
            'value_default' => $value,
            'keys' => ['title' => '加盟店名称']

        ]);


        if($key == 'title'){
            $where .= empty($value) ? '' : ' and title like "%'.$value.'%"';
        }
        $this->view->page_search = $page_search->toArray();


        // 定义表格字段
        $tb_ths = [];
        $tb_ths[] = array("name" => "加盟店名称", "width" => "100");
        $tb_ths[] = array("name" => "店铺图片", "width" => "100");
        $tb_ths[] = array("name" => "联系方式", "width" => "100");
        $tb_ths[] = array("name" => "省/市", "width" => "70");
        $tb_ths[] = array("name" => "市/区", "width" => "70");
        $tb_ths[] = array("name" => "详细地址", "width" => "100");
        $tb_ths[] = array("name" => "加盟日期", "width" => "100");
        $tb_ths[] = array("name" => "操作", "class" => "text-center", "width" => "150");

        // 定义表格操作
        // $actions = ["0"=>["name"=>"启用"], "1"=>["name"=>"禁用"]];
        $op = array(
            ["id_pre" => "et_", "name" => "导出二维码", "link" => "admin/franchise/rqCode"],
            ["id_pre" => "et_", "name" => "编辑", "link" => "admin/franchise/edit"],
            ["id_pre" => "del_", "name" => "删除", "link" => "admin/franchise/delete", "method" => "post"]
        );
        $starNum = empty($page) || $page == 1 ? 0 : ($page-1) * $rows_value;
        //获取列表数据
        $ret = [];
        $number = Franchise::count($where);
        $data = Franchise::find(['conditions' =>$where,'order' => 'JoinTime desc','limit' =>['number' => $rows_value,'offset' =>$starNum]]);

        foreach($data as $value)
        {
            $row['id'] = $value->id;
            $row['title'] = mb_substr($value->title,0,11,'utf-8');
            $row['litpic'] = trim($value->litpic,'"] ["');
            $row['mobile'] = $value->mobile;
            $row['province'] = $value->province;
            $row['city'] = $value->city;
            $row['district'] = $value->district;
            $row['address'] = $value->address;
            $row['JoinTime'] = date('Y-m-d',$value->JoinTime);
            $ret[] = $row;
        }

        $using = array(
            ["field" => 'title'],
            ["field" => 'litpic', "type"=>"image"],
            ["field" => 'mobile'],
            ["field" => 'province'],
            ["field" => 'city'],
            ["field" => 'address'],
            ["field" => 'JoinTime']
        );

        // 定义使用数据
        $tb_trs = array(
            "data" => $ret,
            "using" => $using,
            "op" => $op
        );

        // 数据-表格列表
        $page_table["ths"] = $tb_ths;
        $page_table["trs"] = $tb_trs;
        $this->view->page_table = $page_table;

        // 页码
//        $params = $this->request->getQuery();
        //获取总数据
        $data_count = $number;
        $total = ceil($data_count/$rows_value);
        $pagination_cur = $page;
        $uriStr = $this->request->getURI();
        $uriArray = parse_url($uriStr);
        $queryStr = $uriArray['query'];
        parse_str($queryStr, $queryArray);
        $queryArray['page'] = "";
        $page_pagination = [
            "url" => $this->url->get("admin/franchise/search?" . http_build_query($queryArray)),
            "cur" => $pagination_cur,
            "total" => $total,
            "rows_value" => $rows_value,
            'data_total' => $data_count
        ];
        $this->view->tb_page = $page_pagination;

        // 使用普通模板
        $this->view->pick("franchise/list_pagination_ex");
    }

    public function newAction()
    {
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/base.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/qst_fileinput_init.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/distpicker.data.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/distpicker.js', false);
        // 数据-页头
        $pageHeader["title"] = "添加加盟店";
        $pageHeader["action"]["name"] = "加盟店列表";
        $pageHeader["action"]["link"] = "admin/franchise";
        $this->view->page_header = $pageHeader;

        // 导航菜单
        $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));
        // 表单数据
        $form = new FranchiseForm();
        $form->setAction("admin/franchise/create");
        $this->view->form = $form;
        $this->view->pick("partials/tp_page_form");
    }

    public function createAction()
    {
        if ($this->request->isPost()) {
            // 1. 创建一个新的数据
            $franchise = new Franchise();
            $franchise->title = $this->request->getPost("title");
            $franchise->litpic = $this->request->getPost('litpic');
            $franchise->province = $this->request->getPost('province');
            $franchise->city = $this->request->getPost('city');
            $franchise->district = $this->request->getPost('district');
            $franchise->address = $this->request->getPost("address");
            $franchise->mobile = $this->request->getPost("mobile");
            $franchise->JoinTime = time();
            $franchise->sort_order = $this->request->getPost("sort_order",'int',0);
            $franchise->is_show = $this->request->getPost("is_show",'int',1);
            $franchise->addTime = time();
            if ($franchise->save()) {
                $this->response->redirect('admin/franchise/search');
                //return $this->ajax_return(0, "success");
            }
        }
        $this->response->redirect('admin/franchise/search');
        //return $this->ajax_return(1, "error");
    }

    public function saveAction()
    {
        if ($this->request->isPost()) {
            // 1. get the permission base the id
            $franchiseData = $this->request->getPost();
            $franchiseData['litpic'] = str_replace('\\','',$this->request->getPost("litpic"));
            $franchiseData['JoinTime'] = strtotime($this->request->getPost("joinTime"));

            $franchisId = $franchiseData['id'];
            $franchis = Franchise::findFirst('id = '.$franchisId);
            if (!$franchis) {
                $status = 1;
                $desc = "failed. the permission is not exist";
            } else {
                $franchis->save($franchiseData);
                $this->response->redirect('admin/franchise/search');
            }
            $this->response->redirect('admin/franchise/search');
            //return $this->ajax_return(0, "success");
        }
        return $this->ajax_return(1, "error");
    }

    /**
     * 列表页面执行删除操作
     */
    public function deleteAction()
    {
        $franId = $this->request->getQuery("id");
        $franchise = franchise::findFirstById($franId);
        if ($franchise) {
            if($franchise->delete() == false){
                return $this->ajax_return(1, "error");
            }
        }
        return $this->ajax_return(0, "success");
    }

    public function editAction()
    {
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/base.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/qst_fileinput_init.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/distpicker.data.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/distpicker.js', false);

        $pageHeader["title"] = "编辑加盟店";
        $pageHeader["action"]["name"] = "加盟店列表";
        $pageHeader["action"]["link"] = "admin/franchise";
        $this->view->page_header = $pageHeader;

        // 导航菜单
        $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));

        // TODO 数据关联ID
        $id = $this->request->getQuery("id");

        // TODO 根据关联ID获取数据
        $frandOne = Franchise::findFirst('id = '.$id);

        $frandData = [
            'id' => $id,
            'title' => $frandOne->title,
            'litpic' => json_encode(explode(',',trim($frandOne->litpic,'"] ["'))),
            'mobile' => $frandOne->mobile,
            'static' => '<div id="distpicker5"><select name="province" class="form-control err" data-province="'.$frandOne->province.'"></select>&nbsp;&nbsp;<select name="city"  class="form-control err" data-city="'.$frandOne->city.'"></select>&nbsp;&nbsp;<select name="district"  class="form-control err" data-district="'.$frandOne->district.'"></select></div>',
            'address' => $frandOne->address,
            'joinTime' => date('Y-m-d',$frandOne->JoinTime),
            'sort_order' => $frandOne -> sort_order,
            'is_show' => empty( $frandOne -> is_show )? true : false
        ];
        // 表单数据
        $form = new FranchiseForm($frandData);
        $form->setAction("admin/franchise/save");
        $this->view->form = $form;
        $this->view->pick("partials/tp_page_form");
    }

    public function rqCodeAction(){
        $id = $this->request->getQuery("id");
        if(empty($id)){
            $this->response->redirect("admin/franchise/index");
        }
        $url = 'http://www.sunnyshu.cn/sunny/wap/api/memberlogin?isp=3&napaid='.$id;
        //下载二维码图片
        $file_name = $this->rqcode->getPng($url);
        $mime = 'application/force-download';
        header('Pragma: public'); // required
        header('Expires: 0'); // no cache
        header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
        header('Cache-Control: private',false);
        header('Content-Type: '.$mime);
        header('Content-Disposition: attachment; filename="'.basename($file_name).'"');
        header('Content-Transfer-Encoding: binary');
        header('Connection: close');
        readfile($file_name); // push it out
        exit();
        //$this->weixin->jssdk()->wxLogin($code);
    }

    public function franchisemAction()
    {
        $menu = $this->menu;
        $menu['user']['active'] = true;
        $menu['user']['link_action'] = "admin/franchise/franchisem";
        $this->view->menu_root = $menu;

        $franid = $this->session->get('auth-identity')['ispd'];
        if(empty($franid)){
            echo '加盟店id异常！';exit;
        }

        $franchiseData = Franchise::findFirst('id = ' . $franid);
        $franchiserow['id'] = $franchiseData->id;
        $franchiserow['title'] = $franchiseData->title;
        $franchiserow['province'] = $franchiseData->province;
        $franchiserow['city'] = $franchiseData->city;
        $franchiserow['district'] = $franchiseData->district;
        $franchiserow['address'] = $franchiseData->address;
        $franchiserow['balance'] = $franchiseData->balance;
        $this->view->franchiserow = $franchiserow;
        $this->view->pick("franchise/index");
    }
    //提现
    public function reflectAction(){
        $menu = $this->menu;
        $menu['user']['active'] = true;
        $menu['user']['link_action'] = "admin/franchise/franchisem";
        $this->view->menu_root = $menu;

        $id = $this->session->get('auth-identity')['ispd'];
        if(empty($id)){
            echo '加盟店id异常！';exit;
        }

        $userid = $this->session->get('auth-identity')['id'];
        $payLogData = PayLog::findFirst(['conditions' => 'userid = ' . $userid . ' and fancheise_id =' . $id . ' and type = 3','order' => ' id desc','limit' => ['number' => 1 , 'offset' => 0]]);

        $sedData = [
            'id' => $id,
            'name' => $payLogData->name,
            'code' => $payLogData->code,
            'brank' => $payLogData->brank,
            'brankCode' => $payLogData->brankCode
        ];
        // 表单数据
        $form = new ReflectAddForm($sedData);
        $form->setAction("admin/franchise/reflectsave");
        $this->view->form = $form;
        $this->view->pick("partials/tp_page_form");
    }
    //提现保存
    public function reflectsaveAction(){
        $this->db->begin();
        $id = $this->session->get('auth-identity')['ispd'];
        if(empty($id)){
            echo '加盟店id异常！';exit;
        }
        $refPrice = $this->request->getPost("refPrice",'int',0);
        $name = $this->request->getPost("name",'string','');
        $code = $this->request->getPost("code",'string','');
        $brank = $this->request->getPost("brank",'string','');
        $brankCode = $this->request->getPost("brankCode",'int',0);
        $orderData = Franchise::findFirstById($id);
        if($refPrice < 100){
            echo '提现金额必须大于100！';
        }
        if($orderData->balance < $refPrice){
            echo '余额不足！';exit;
        }
        $payLogData = new PayLog();
        $payLogData->userid = $this->session->get('auth-identity')['id'];
        $payLogData->fancheise_id = $id;
        $payLogData->type = 3;
        $payLogData->AddSub = 1;
        $payLogData->title = '提现';
        $payLogData->totalprice = $refPrice;
        $payLogData->name = $name;
        $payLogData->code = $code;
        $payLogData->brank = $brank;
        $payLogData->brankCode = $brankCode;
        $payLogData->vstate = 0;
        $payLogData->addTime = time();
        if($payLogData->save() == false){
            $this->db->rollback();
        }else{
            $payLogData->ordercode = 1000 + $payLogData->id;
            $payLogData->update();
            $orderData->balance =  $orderData->balance - $refPrice;
            if($orderData->update() == false){
                $this->db->rollback();
            }
        }
        $this->db->commit();
        $this->response->redirect('admin/franchise/franchisem');
    }
    //加盟交易列表
    public function reflectListAction(){
        $menu = $this->menu;
        $menu['user']['active'] = true;
        $menu['user']['link_action'] = "admin/franchise/franchisem";
        $this->view->menu_root = $menu;

        $rows_value = 10;   //一页显示多少条数据
        $id = $this->session->get('auth-identity')['ispd'];//加盟店id
        if(empty($id)){
            echo '加盟店id异常！';exit;
        }

        $userid = $this->session->get('auth-identity')['id'];//当前加盟店关联会员id
        $page = $this->request->getQuery("page");
        $d_start = $this->request->getQuery('d_start');
        $d_end = $this->request->getQuery('d_end');


        // 加载CSS和JS资源
        $this->assets->addCss(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker3.min.css', false)
            ->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js', false)
            ->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/locales/bootstrap-datepicker.zh-CN.min.js', false)
            ->addJs(_LIBS_ . 'libs/jsapi/qst_date_init.js', false);
//        $this->assets->addJs("public/static/background/js/thumbnail_init.js");
        // 数据-页头
        $pageHeader["title"] = "交易明细";
        $pageHeader["action"]["name"] = '<span class="fa fa-plus">&nbsp;&nbsp;交易明细</span>';;
        $pageHeader["action"]["link"] = "admin/franchise/reflectList";
        $this->view->page_header = $pageHeader;

        // 数据-搜索栏
        $page_search = new QSTBaseSearch("admin/franchise/reflectList");

        $page_search->addCondition([
            "type" => 2,
            "date_type" => 1,
            "label" => "日期",
            "date_start" => [
                "key" => "d_start",
                "value" => empty($d_start)? '': $d_start
            ],
            "date_end" => [
                "key" => "d_end",
                "value" => empty($d_end)? '': $d_end
            ],
        ]);

        $where = 'userid = ' . $userid . ' and fancheise_id =' . $id . ' and type = 3';

        $stateDate = strtotime($d_start . ' 00:00:00');
        $endDate = strtotime($d_end . ' 23:59:59');

        $this->view->page_search = $page_search->toArray();

        // 定义表格字段
        $tb_ths = [];
        $tb_ths[] = array("name" => "交易说明", "width" => "100");
        $tb_ths[] = array("name" => "交易发起人", "width" => "100");
        $tb_ths[] = array("name" => "状态", "width" => "100");
        $tb_ths[] = array("name" => "金额", "width" => "70");
        $tb_ths[] = array("name" => "交易时间", "width" => "100");

        // 定义表格操作
        // $actions = ["0"=>["name"=>"启用"], "1"=>["name"=>"禁用"]];
        $op = array(
        );
        $stateDate = strtotime($d_start . ' 00:00:00');
        $endDate = strtotime($d_end . ' 23:59:59');

        $where .= empty($d_start) ? '' : ' and addTime  >'. $stateDate ;
        $where .= empty($d_end) ? '' : ' and addTime <'. $endDate ;

        $starNum = empty($page) || $page == 1 ? 0 : ($page-1) * $rows_value;
        //获取列表数据
        $ret = [];
        $data = PayLog::find(['conditions' => $where,'order' => ' id desc','limit' =>['number' => 10,'offset' =>$starNum]]);
        foreach($data as $value)
        {
            $row['id'] = $value->id;
            $row['title'] = mb_substr($value->title,0,11,'utf-8');
            $row['userid'] = $this->getUserInfo($value->userid,$value->type);
            $row['vstate'] = $this->getState($value->vstate);
            $row['totalprice'] = empty($value->AddSub) ? '+'.$value->totalprice : '-'.$value->totalprice ;
            $row['addTime'] = date('Y-m-d H:i',$value->addTime);
            $ret[] = $row;
        }

        $using = array(
            ["field" => 'title'],
            ["field" => 'userid'],
            ["field" => 'vstate'],
            ["field" => 'totalprice'],
            ["field" => 'addTime']
        );

        // 定义使用数据
        $tb_trs = array(
            "data" => $ret,
            "using" => $using,
            "op" => $op
        );

        // 数据-表格列表
        $page_table["ths"] = $tb_ths;
        $page_table["trs"] = $tb_trs;
        $this->view->page_table = $page_table;

        // 页码
//        $params = $this->request->getQuery();
        //获取总数据
        $data_count = count($ret);
        $total = ceil($data_count/$rows_value);
        $pagination_cur = $this->request->getQuery("page", null, 1);
        $uriStr = $this->request->getURI();
        $uriArray = parse_url($uriStr);
        $queryStr = $uriArray['query'];
        parse_str($queryStr, $queryArray);
        $queryArray['page'] = "";
        $page_pagination = [
            "url" => $this->url->get("admin/Category/search?" . http_build_query($queryArray)),
            "cur" => $pagination_cur,
            "total" => $total,
            "rows_value" => $rows_value,
            'data_total' => $data_count
        ];
        $this->view->tb_page = $page_pagination;

        // 使用普通模板
        $this->view->pick("public/list_pagination_ex");

    }

    private function getState($state){
        $str = '正在处理';
        switch($state){
            case 1:
                $str = '提现成功';
                break;
            case 2:
                $str = '拒绝提现';
                break;
            case 3:
                $str = '提现失败';
                break;
        }
        return $str;
    }
    private function getUserInfo($userid,$type){
        $str ='';
        if($type == 3){
            $str = $this->session->get('auth-identity')['account'];
        }else{
            $userData = MemberInfo::findFirst('userid = ' . $userid);
            $str = $userData->nick;
        }
        return $str;
    }
}
