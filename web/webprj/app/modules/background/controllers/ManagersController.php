<?php

namespace App\Background\Controllers;

use App\Background\Forms\ManagerForm;
use App\Background\Forms\ManagerPWForm;
use App\Background\Forms\ManagerMBForm;
use App\Models\Depot;
use App\Models\Franchise;
use Plugin\Login\LoginException;
use Plugin\Login\Models\Users;
use Plugin\Rbac\Models\Roles;

/**
 * Created by PhpStorm.
 * User: miaogang
 * Date: 2016/8/23
 * Time: 11:51
 */
class ManagersController extends BaseController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $menu = $this->menu;
        $menu['rbac']['active'] = true;
        $menu['rbac']['sub_menu']['mangers']['link_action'] = "admin/managers/";
        $menu['rbac']['sub_menu']['mangers']['active'] = true;
        $this->view->menu_root = $menu;
        $this->view->nav_menu = array($this->view->nav_menu, array("name" => "用户管理", "link" => "admin/managers/"));
        $this->assets->addCss('public/static/background/css/common.css');
    }

    public function indexAction()
    {
        $this->response->redirect('admin/managers/search');
    }

    /**
     * 执行查询列表中的筛选操作
     */
    public function searchAction()
    {
        // 查询页
        $ispage = $this->request->getQuery("ispage");//页面跳转标示
        $this->addLibJs("libs/jsapi/qst_linkpost.js");
        $this->addLibJs("libs/jsapi/table.js");
        $this->addLibJs("libs/jsapi/base.js");
        $this->addLibJs("libs/jsapi/managers.js");
        $this->addLibJs("libs/js3party/bootstrap-terebentina-sco/1.0.2/js/sco.modal.js");
        $this->addLibJs("libs/js3party/bootstrap-terebentina-sco/1.0.2/js/sco.confirm.js");

        $pageHeader["title"] = "用户管理列表";
        $pageHeader["action"]["name"] = '<span class="fa fa-plus">&nbsp;&nbsp;添加后台用户</span>';
        $pageHeader["action"]["link"] = "/admin/managers/new";
        $this->view->page_header = $pageHeader;

        // 获取用户数据
        $data = $this->login->getUsers();

        //获取权限
        $roleData = Roles::find(' activity = 1');
        $roleDatas = [];
        foreach($roleData as $value){
            $roleDatas[] = ['id'=>$value->id,'title'=>$value->title];
        }

        // 总管理员
        $tb_ths = [];
        $tb_ths[] = array("name" => "账户", "width" => "150");
        $tb_ths[] = array("name" => "姓名", "width" => "150");
        $tb_ths[] = array("name" => "手机号", "width" => "150");
        $tb_ths[] = array("name" => "创建时间");
        $tb_ths[] = array("name" => "操作", "class" => "text-center", "width" => "250");
        $dataz = [];
        $n = 0;
        foreach($data as $key => $value)
        {
            if(empty($value['role_id'])){
                $dataz[$n++] = [
                    'id'=>$value['id'],
                    'account'=>$value['account'],
                    'name'=>$value['name'],
                    'tel'=>$value['tel'],
                    'role_id'=>$value['role_id'],
                    'Relation_id'=>$value['Relation_id'],
                    'create_time' => date('Y-m-d H:i',$value['create_time'])
                ];
            }
        }
        // 定义使用的字段
        $using = array(
            ["field" => "account"],
            ["field" => "name"],
            ["field" => "tel"],
            ["field" => "create_time"]
        );
        // 定义操作
        //$actions = ["0" => ["name" => "启用"], "1" => ["name" => "禁用"]];
        $op = array(
            //["id_pre" => "sw_", "link" => "admin/managers/enable", "method" => "post", "multiple" => $actions, "key" => "activity"],
            ["id_pre" => "ed_", "name" => "修改密码", "link" => "admin/managers/editpassword"],
            ["id_pre" => "del_", "name" => "删除", "link" => "admin/managers/delete", "method" => "post"]
        );

        // 定义表格内容部分
        $tb_trs = array(
            "data" => $dataz,
            "using" => $using,
            "op" => $op
        );
        $page_table["ths"] = $tb_ths;
        $page_table["trs"] = $tb_trs;

        // 运维管理员列表
        $tb_thsyw = [];
        $tb_thsyw[] = array("name" => "账户", "width" => "150");
        $tb_thsyw[] = array("name" => "姓名", "width" => "150");
        $tb_thsyw[] = array("name" => "手机号", "width" => "150");
        $tb_thsyw[] = array("name" => "创建时间");
        $tb_thsyw[] = array("name" => "操作", "class" => "text-center", "width" => "250");

        $datayw = [];
        $n = 0;
        foreach($data as $key => $value)
        {
            if($value['role_id'] == 1){
                $datayw[$n++] = [
                    'id'=>$value['id'],
                    'account'=>$value['account'],
                    'name'=>$value['name'],
                    'tel'=>$value['tel'],
                    'role_id'=>$value['role_id'],
                    'Relation_id'=>$value['Relation_id'],
                    'create_time' => date('Y-m-d H:i',$value['create_time'])
                ];
            }
        }

        // 定义使用的字段
        $usingyw = array(
            ["field" => "account"],
            ["field" => "name"],
            ["field" => "tel"],
            ["field" => "create_time"]
        );
        // 定义操作
        //$actions = ["0" => ["name" => "启用"], "1" => ["name" => "禁用"]];
        $opyw = array(
            //["id_pre" => "sw_", "link" => "admin/managers/enable", "method" => "post", "multiple" => $actions, "key" => "activity"],
            ["id_pre" => "md_", "name" => "修改手机号", "link" => "admin/managers/edmoblie"],
            ["id_pre" => "ed_", "name" => "重置密码", "link" => "admin/managers/resetpw"],
            ["id_pre" => "del_", "name" => "删除", "link" => "admin/managers/delete", "method" => "post"]
        );

        // 定义表格内容部分
        $tb_trsyw = array(
            "data" => $datayw,
            "using" => $usingyw,
            "op" => $opyw
        );
        $page_table["thsyw"] = $tb_thsyw;
        $page_table["trsyw"] = $tb_trsyw;

        // 仓库管理员列表
        $tb_thsck = [];
        $tb_thsck[] = array("name" => "账户", "width" => "150");
        $tb_thsck[] = array("name" => "姓名", "width" => "150");
        $tb_thsck[] = array("name" => "手机号", "width" => "150");
        $tb_thsck[] = array("name" => "所在仓库", "width" => "150");
        $tb_thsck[] = array("name" => "创建时间",  "width" => "150");
        $tb_thsck[] = array("name" => "操作", "class" => "text-center", "width" => "250");

        $datack = [];
        $n = 0;
        foreach($data as $key => $value)
        {
            if($value['role_id'] == 2){
                $datack[$n++] = [
                    'id'=>$value['id'],
                    'account'=>$value['account'],
                    'name'=>$value['name'],
                    'tel'=>$value['tel'],
                    'depotName'=>$this->getTitleDepot($value['Relation_id']),
                    'role_id'=>$value['role_id'],
                    'create_time' => date('Y-m-d H:i',$value['create_time'])
                ];
            }
        }
        // 定义使用的字段
        $usingck = array(
            ["field" => "account"],
            ["field" => "name"],
            ["field" => "tel"],
            ["field" => "depotName"],
            ["field" => "create_time"]
        );
        // 定义操作
        //$actions = ["0" => ["name" => "启用"], "1" => ["name" => "禁用"]];
        $opck = array(
            //["id_pre" => "sw_", "link" => "admin/managers/enable", "method" => "post", "multiple" => $actions, "key" => "activity"],
            ["id_pre" => "md_", "name" => "修改手机号", "link" => "admin/managers/edmoblie"],
            ["id_pre" => "ed_", "name" => "重置密码", "link" => "admin/managers/resetpw"],
            ["id_pre" => "del_", "name" => "删除", "link" => "admin/managers/delete", "method" => "post"]
        );

        // 定义表格内容部分
        $tb_trsck = array(
            "data" => $datack,
            "using" => $usingck,
            "op" => $opck
        );
        $page_table["thsck"] = $tb_thsck;
        $page_table["trsck"] = $tb_trsck;

        // 加盟店管理员列表
        $tb_thsjm = [];
        $tb_thsjm[] = array("name" => "账户", "width" => "150");
        $tb_thsjm[] = array("name" => "姓名", "width" => "150");
        $tb_thsjm[] = array("name" => "手机号", "width" => "150");
        $tb_thsjm[] = array("name" => "所在加盟店", "width" => "200");
        $tb_thsjm[] = array("name" => "创建时间",  "width" => "150");
        $tb_thsjm[] = array("name" => "操作", "class" => "text-center", "width" => "250");

        $datajm = [];
        $n = 0;
        foreach($data as $key => $value)
        {
            if($value['role_id'] == 3){
                $datajm[$n++] = [
                    'id'=>$value['id'],
                    'account'=>$value['account'],
                    'name'=>$value['name'],
                    'tel'=>$value['tel'],
                    'depotName'=>$this->getTitleFranchise($value['Relation_id']),
                    'role_id'=>$value['role_id'],
                    'create_time' => date('Y-m-d H:i',$value['create_time'])
                ];
            }
        }
        // 定义使用的字段
        $usingjm = array(
            ["field" => "account"],
            ["field" => "name"],
            ["field" => "tel"],
            ["field" => "depotName"],
            ["field" => "create_time"]
        );
        // 定义操作
        //$actions = ["0" => ["name" => "启用"], "1" => ["name" => "禁用"]];
        $opjm = array(
            //["id_pre" => "sw_", "link" => "admin/managers/enable", "method" => "post", "multiple" => $actions, "key" => "activity"],
            ["id_pre" => "md_", "name" => "修改手机号", "link" => "admin/managers/edmoblie"],
            ["id_pre" => "ed_", "name" => "重置密码", "link" => "admin/managers/resetpw"],
            ["id_pre" => "del_", "name" => "删除", "link" => "admin/managers/delete", "method" => "post"]
        );

        // 定义表格内容部分
        $tb_trsjm = array(
            "data" => $datajm,
            "using" => $usingjm,
            "op" => $opjm
        );
        $page_table["thsjm"] = $tb_thsjm;
        $page_table["trsjm"] = $tb_trsjm;

        $this->view->roleDatas = $roleDatas;
        $this->view->page_table = $page_table;
        $this->view->ispage = $ispage;
        $this->view->pick("managers/list_normal");
    }

    /**
     * 执行查询列表页面中的新增操作
     */
    public function newAction()
    {
        if($this->request->isGet()){
            $this->assets->addJs(_LIBS_ . 'libs/js3party/jquery-form/3.46.0/jquery.form.min.js', false);
            $this->assets->addJs(_LIBS_ . 'libs/js3party/bootstrap-terebentina-sco/1.0.2/css/sco.message.css', false);
            $this->assets->addJs(_LIBS_ . 'libs/js3party/bootstrap-terebentina-sco/1.0.2/js/sco.message.js', false);
            $this->addLibJs('libs/jsapi/form-mutex-operations.js');
            $this->addLibJs('libs/jsapi/roles/manager-editor.js');

            $pageHeader["title"] = "添加用户后台";
            $pageHeader["action"]["name"] = '用户管理列表';
            $pageHeader["action"]["link"] = "admin/managers";
            $this->view->page_header = $pageHeader;

            $depotDatas = $this->getDepot();
            $franchiseDatas  = $this->getFranchise();

            $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));
            $roles = $this->rbac->getRoles(array('conditions' => "activity=1", "columns"=>"id, title"));
            $selectRoles = array();
            $selectRoles[$this->rbac->getSupperRoleId()] = $this->rbac->getSupperRoleName();
            foreach ($roles as $role) {
                $selectRoles[$role['id']] = $role['title'];
            }

            $form = new ManagerForm(null, array("roles" => $selectRoles));
            $form->setAction("admin/managers/create");
            $this->view->form = $form;
            $this->view->depotDatas = $depotDatas;
            $this->view->franchiseDatas = $franchiseDatas;
            //$this->view->pick("partials/tp_page_form");
        }else{
            return $this->response->setStatusCode(403);
        }
    }

    //修改管理员密码
    public function editpasswordAction(){

        if($this->request->isGet()){
            $this->assets->addJs(_LIBS_ . 'libs/js3party/jquery-form/3.46.0/jquery.form.min.js', false);
            $this->addLibJs('libs/jsapi/form-mutex-operations.js');
            $pageHeader["title"] = "修改用户密码";
            $pageHeader["action"]["name"] = '用户管理列表';
            $pageHeader["action"]["link"] = "admin/managers";
            $this->view->page_header = $pageHeader;

            $id = $this->request->getQuery("id");
            if(!isset($id)){
                $this->log("query field id is required.");
                return $this->response->redirect("admin/managers");
            }
            $user = $this->login->getUserById($id);
            if(!isset($user->id)){
                $this->log("no matched user found");
                return $this->response->redirect("admin/managers");
            }

            $pageHeader["title"] = "修改密码";
            $pageHeader["action"]["name"] = '用户管理列表';
            $pageHeader["action"]["link"] = "admin/managers";
            $this->view->page_header = $pageHeader;

            $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));

            $form = new ManagerPWForm(['id'=>$id]);
            $form->setAction("admin/managers/pwsave");
            $this->view->form = $form;
        }else{
            return $this->response->setStatusCode(403);
        }
    }

    //修改手机号
    public function edmoblieAction(){
        if($this->request->isGet()){
            $this->assets->addJs(_LIBS_ . 'libs/js3party/jquery-form/3.46.0/jquery.form.min.js', false);
            $this->addLibJs('libs/jsapi/form-mutex-operations.js');
            $pageHeader["title"] = "修改手机号";
            $pageHeader["action"]["name"] = '用户管理列表';
            $pageHeader["action"]["link"] = "admin/managers";
            $this->view->page_header = $pageHeader;

            $id = $this->request->getQuery("id");
            if(!isset($id)){
                $this->log("query field id is required.");
                return $this->response->redirect("admin/managers");
            }
            $user = $this->login->getUserById($id);
            if(!isset($user->id)){
                $this->log("no matched user found");
                return $this->response->redirect("admin/managers");
            }

            $pageHeader["title"] = "修改手机号";
            $pageHeader["action"]["name"] = '用户管理列表';
            $pageHeader["action"]["link"] = "admin/managers";
            $this->view->page_header = $pageHeader;

            $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));

            $form = new ManagerMBForm(['id'=>$id]);
            $form->setAction("admin/managers/mobilesave");
            $this->view->form = $form;
        }
    }
    /**
     * 执行查询列表中的编辑操作
     */
    public function editAction()
    {
        if($this->request->isGet()){
            $id = $this->request->getQuery("id");
            if(!isset($id)){
                $this->log("query field id is required.");
                return $this->response->redirect("admin/managers");
            }

            $user = $this->login->getUserById($id);
            if(!isset($user->id)){
                $this->log("no matched user found");
                return $this->response->redirect("admin/managers");
            }

            $this->assets->addJs(_LIBS_ . 'libs/js3party/jquery-form/3.46.0/jquery.form.min.js', false);
            $this->assets->addJs(_LIBS_ . 'libs/js3party/bootstrap-terebentina-sco/1.0.2/css/sco.message.css', false);
            $this->assets->addJs(_LIBS_ . 'libs/js3party/bootstrap-terebentina-sco/1.0.2/js/sco.message.js', false);
            $this->addLibJs('libs/jsapi/form-mutex-operations.js');
            $this->addLibJs('libs/jsapi/roles/manager-editor.js');

            $pageHeader["title"] = "添加用户后台";
            $pageHeader["action"]["name"] = '用户管理列表';
            $pageHeader["action"]["link"] = "admin/managers";
            $this->view->page_header = $pageHeader;

            $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));
            $roles = $this->rbac->getRoles(array('conditions' => "activity=1", "columns"=>"id, title"));
            $selectRoles = array();
            $selectRoles[$this->rbac->getSupperRoleId()] = $this->rbac->getSupperRoleName();
            foreach ($roles as $role) {
                $selectRoles[$role['id']] = $role['title'];
            }
            $form = new ManagerForm($user->toArray(array(
                "id", "account", "name", "role_id", "role_name"
            )), array("roles" => $selectRoles));
            $form->setAction("admin/managers/save");
            $this->view->form = $form;
        }else{
            return $this->response->setStatusCode(403);
        }
    }

    //保存修改的手机号
    public function mobilesaveAction(){
        if($this->request->isPost()){
            $id = $this->request->getPost("id");
            if(!isset($id)){
                return $this->response->redirect("admin/managers");
            }
            $moblie = $this->request->getPost("moblie");
            if(!isset($moblie)){
                return $this->response->redirect("admin/managers");
            }
            $user = $this->login->getUserById($id);
            if ($user == false) {
                return $this->response->redirect('admin/managers');
            }
            if(strlen($moblie) != 11){
                return $this->response->redirect('admin/managers');
            }
            $user->tel = $moblie;
            $user->save();
            return $this->response->redirect('admin/managers/search?ispage='.$user->role_id);
        }
    }

    //保存修改密码
    public function pwsaveAction(){
        if($this->request->isPost()){
            $id = $this->request->getPost("id");
            if(!isset($id)){
                return $this->response->redirect("admin/managers");
            }
            $user = $this->login->getUserById($id);
            if ($user == false) {
                return $this->response->redirect('admin/managers');
            }

            $opassword = $this->request->getPost("opassword");
            $password = $this->request->getPost("password");
            $pw_confirm = $this->request->getPost("pw_confirm");
            if (!$this->security->checkHash($opassword, $user->password)) {
                return $this->response->redirect('admin/managers');
            }
            if($password != $pw_confirm) {
                return $this->response->redirect('admin/managers');
            }
            $this->login->setPassword($user->id,$password);
            return $this->response->redirect('admin/managers');
        }
    }

    //重置密码
    public function resetpwAction(){
        if($this->request->isGet()){
            $id = $this->request->getQuery("id");
            if(!isset($id)){
                return $this->ajax_return(1, "error");
            }
            $user = $this->login->getUserById($id);
            if ($user == false) {
                return $this->ajax_return(1, "error");
            }
            $this->login->setPassword($user->id,88888888);
            return $this->ajax_return(0, "success");
        }
    }
    /**
     * 新增页面执行提交操作
     */
    public function createAction()
    {
        if ($this->request->isPost()) {
            //$data = $this->getJsonArrayBody(array('account', 'password', 'pw_confirm', 'name', 'role_id','moblie','depot_id','franchise_id'));
            $role_id = $this->request->getPost('role_id');
            $depot_id = $this->request->getPost('depot_id');
            $franchise_id = $this->request->getPost('franchise_id');
            $relaid = 0;
            if($role_id == 2){
                $relaid = $depot_id;
            }
            if($role_id == 3){
                $relaid = $franchise_id;
            }
            $tel = $this->request->getPost('moblie');
            if(!empty($tel) && !empty($relaid)){
                $data = [
                    'account' => $tel,
                    'tempId' => 153298,
                    'datas' =>[$this->request->getPost('account')]
                ];
                $this->sms->sendsms($data);
            }
            //同种角色电话唯一
            $telData = Users::findFirst('tel = '.$tel.' and role_id = '.$role_id);
            //如果已经存在了就直接跳转到管理用户页面
            if(!empty($telData->id)){
                $this->response->redirect("admin/managers/search?ispage=".$role_id);
            }

            $data = [
                'account' => $this->request->getPost('account'),
                'password' => $this->request->getPost('password'),
                'pw_confirm' => $this->request->getPost('pw_confirm'),
                'name' => $this->request->getPost('name'),
                'role_id' => $role_id,
                'tel' => $this->request->getPost('moblie'),
                'Relation_id' => $relaid
            ];
            if(!is_array($data)){
                return $this->responseJson(null, "1007");
            }
            if("" == $data['password'] || $data['password'] != $data['pw_confirm']){
                return $this->responseJson(null, "1007");
            }
            if($data['role_id'] == $this->rbac->getSupperRoleId()){
                $data['role_name'] = $this->rbac->getSupperRoleName();
            }else{
                $role = $this->rbac->getRoleById($data['role_id']);
                $data['role_name'] = $role->getTitle();
            }
            try{
                $ret = $this->login->signup($data);
                if(-1 == $ret){
                    return $this->responseJson(null, "1010");
                }else if(-2 == $ret){
                    return $this->responseJson(null, "0998");
                }
                }catch (LoginException $e) {
                    //$this->log($e->getMessage());
                    return $this->responseJson(null, "1007");
                }
                $this->response->redirect("admin/managers/search?ispage=".$role_id);
            }else{
                return $this->response->setStatusCode(403);
            }
        }

        /**
         * 编辑页面执行保存操作
         */
    public function saveAction()
    {
        if ($this->request->isPost()) {
            $this->log($this->request->getRawBody());
            $data = $this->getJsonArrayBody(array('id', 'name', 'role_id'));
            if(!is_array($data)){
                return $this->responseJson(null, "1007");
            }
            if($data['role_id'] == $this->rbac->getSupperRoleId()){
                $data['role_name'] = $this->rbac->getSupperRoleName();
            }else{
                $role = $this->rbac->getRoleById($data['role_id']);
                $data['role_name'] = $role->getTitle();
            }
            $ret = $this->login->updateAccount($data['id'], $data['name'], $data['role_id'], $data['role_name']);
            if(false == $ret){
                return $this->responseJson(null, "0998");
            }
            return $this->responseJson();
        }else{
            return $this->response->setStatusCode(403);
        }
    }

    /**
     * 列表页面执行删除操作
     */
    public function deleteAction()
    {
        $managerId = $this->request->getQuery('id');
        $this->login->deleteUserById($managerId);
        return $this->responseJson();
    }

    /**
     * 后台管理员的启用、禁用
     */
    public function enableAction()
    {
        $managerId = $this->request->getQuery("id");
        $managerActivity = $this->request->getQuery("activity");
        $managerActivity = boolval(intval($managerActivity));
        $managerActivity = !$managerActivity;
        $result = $this->login->enableManager($managerId, $managerActivity);
        $activity = $result ? $managerActivity : !$managerActivity;
        $data = array(
            "text" => !empty($activity) ? "禁用" : "启用",
            "href" => $this->url->get("admin/managers/enable", ["id" => $managerId, "activity" => (empty($activity) ? 0 : 1)])
        );
        $this->ajax_return($result ? 0 : 1, $data, $data);
    }

    public function passwordAction()
    {
        if($this->request->isPost()){
            $reqData = $this->getJsonArrayBody(array('password', 'password_confirm', 'id'));
            if(!is_array($reqData)){
                $this->log("get json data failed, body:" . $this->request->getRawBody());
                return $this->responseJson(null, "1007");
            }
            if($reqData['password'] != $reqData['password_confirm']){
                $this->log("password and confirm password not match");
                return $this->responseJson(null, "1007");
            }
            $ret = $this->login->setPassword($reqData['id'], $reqData['password']);
            if(false == $ret){
                return $this->responseJson(null, "0998");
            }
            return $this->responseJson();
        }else{
            return $this->response->setStatusCode(403);
        }
    }
    //获取所有仓库
    private function getDepot(){
        $depotObj = Depot::find('is_show = 1');
        $depotData= [];
        foreach ($depotObj as $row) {
            $depotData[] = ['id' =>$row->id,'title' => $row->title];

        }
        return $depotData;
    }

    //获取指定仓库
    private function getTitleDepot($id){
        $str = '暂无关联';
        if(!empty($id)){
            $str = Depot::findFirst(' id = '.$id.' and is_show = 1')->title;
        }
        return $str;
    }

    //获取所有加盟店
    private function getFranchise(){
        $franchiseObj = Franchise::find('is_show = 1');
        $franchiseData= [];
        foreach ($franchiseObj as $row) {
            $franchiseData[] = ['id' =>$row->id,'title' => $row->title];
        }
        return $franchiseData;
    }
    //获取指定加盟店
    private function getTitleFranchise($id){
        $str = '暂无关联';
        if(!empty($id)){
            $str = Franchise::findFirst(' id = '.$id.' and is_show = 1')->title;
        }
        return $str;
    }

}