<?php
/**
 * Created by PhpStorm.
 * User: dodo
 * Date: 2016/8/1
 * Time: 21:18
 */

namespace App\Background\Controllers;

use App\Background\Forms\ManagerForm;
use App\Background\Forms\ReflectIsForm;
use App\Models\Franchise;
use App\Models\Goods;
use App\Models\Order;
use App\Models\OrderGoods;
use App\Models\PayLog;
use Plugin\Core\QSTBaseSearch;
use Phalcon\Mvc\View;
use Plugin\Login\Models\Users;

/**
 * Display the default index page.
 */
class ReflectController extends BaseController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $menu = $this->menu;
        $menu['reflect']['link_action'] = "admin/reflect";
        $menu['reflect']['active'] = true;
        $this->view->menu_root = $menu;
        $this->view->nav_menu = array_merge(array($this->view->nav_menu, array("name" => "提现管理", "link" => "admin/reflect")));
        $this->assets->addCss('public/static/background/css/common.css');
    }

    public function indexAction()
    {
        $this->response->redirect("admin/reflect/search");
    }

    public function searchAction()
    {
        $where = ' type = 3';  //查询条件
        $rows_value = 10;   //一页显示多少条数据
        $page = $this->request->getQuery("page");
        $state = $this->request->getQuery("state");
        $franchise = $this->request->getQuery("franchise");
        $frands = Users::findFirst('account ="'. $franchise .'"');

        if($this->request->isPost()){
            $this->log($this->request->getPost());
        }
        // 加载CSS和JS资源
        $this->assets->addCss(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker3.min.css', false)
            ->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js', false)
            ->addJs(_LIBS_ . 'libs/js3party/bootstrap-datepicker/1.6.4/locales/bootstrap-datepicker.zh-CN.min.js', false)
            ->addJs(_LIBS_ . 'libs/jsapi/qst_date_init.js', false);

        // 数据-页头
        $pageHeader["title"] = "提现管理";
        $this->view->page_header = $pageHeader;

        // 数据-搜索栏
        $page_search = new QSTBaseSearch("admin/reflect/search");

        $page_search->addCondition([
            'type' => 4,
            'label' => '加盟店账号',
            'value' => $franchise,
            'key' => 'franchise'
        ]);

        $page_search->addCondition([
            'type' => 1,
            'label' => '状态',
            'key' => 'state',
            'value' => $state,
            'options' => [-1=>'待审核',1=>'已通过',3=>'未通过']

        ]);
        $this->view->page_search = $page_search->toArray();

        // 定义表格字段
        $tb_ths = [];
        $tb_ths[] = array("name" => "加盟店账号", "width" => "200");
        $tb_ths[] = array("name" => "提现金额", "width" => "100");
        $tb_ths[] = array("name" => "状态", "width" => "100");
        $tb_ths[] = array("name" => "提现时间", "width" => "160");
        $tb_ths[] = array("name" => "备注", "width" => "100");
        $tb_ths[] = array("name" => "操作人", "width" => "100");
        $tb_ths[] = array("name" => "审核时间", "width" => "120");
        $tb_ths[] = array("name" => "操作", "class" => "text-center", "width" => "175");

        // 定义表格操作
        // $actions = ["0"=>["name"=>"启用"], "1"=>["name"=>"禁用"]];
        $op = array(
            ["id_pre" => "et_", "name" => "审核", "link" => "admin/reflect/reflect_is"]
        );
        if($state == -1){
            $where .= ' and vstate = 0' ;
        }elseif($state == 1){
            $where .= ' and vstate = 1' ;
        }elseif($state == 3){
            $where .= ' and vstate = 2  or vstate = 3 ' ;
        }

        $starNum = empty($page) || $page == 1 ? 0 : ($page-1) * $rows_value;
        //获取列表数据
        $ret = [];

        $where .= empty($frands->id) ? '' : ' and userid = '. $frands->id ;

        $number = PayLog::count($where);
        $Orders = PayLog::find(['conditions' =>$where,'order' => 'addTime desc','limit' =>['number' => 10,'offset' =>$starNum]]);

        foreach($Orders as $value)
        {
            $row['id'] = $value->ordercode;
            $row['ordercode'] = $value->ordercode;
            $row['userid'] = $this->getUserInfo($value->userid,$value->type);
            $row['totalprice'] = empty($value->AddSub) ? '+'.$value->totalprice : '-'.$value->totalprice ;
            $row['state'] = $this->getState($value->vstate);
            $row['addTime'] = date('Y-m-d H:i',$value->addTime);
            $row['mess'] = $value->mess;
            $row['htuserid'] = $this->getUserInfo($value->htuserid,$value->type);
            $row['vstate'] = $this->getState($value->vstate);
            $row['vstates'] = $this->isRelectFail($value->ordercode,$value->vstate);
            $row['etime'] = empty($value->etime) ? '' : date('Y-m-d H:i',$value->etime);
            $ret[] = $row;
        }
        $using = array(

            ["field" => 'userid'],
            ["field" => 'totalprice'],
            ["field" => 'state'],
            ["field" => 'addTime'],
            ["field" => 'mess'],
            ["field" => 'htuserid'],
            ["field" => 'etime']
        );

        // 定义使用数据
        $tb_trs = array(
            "data" => $ret,
            "using" => $using,
            "op" => $op
        );

        // 数据-表格列表
        $page_table["ths"] = $tb_ths;
        $page_table["trs"] = $tb_trs;
        $this->view->page_table = $page_table;

        // 页码
//        $params = $this->request->getQuery();
        //获取总数据
        $data_count = $number;
        $total = ceil($data_count/$rows_value);
        $pagination_cur = $this->request->getQuery("page", null, 1);
        $uriStr = $this->request->getURI();
        $uriArray = parse_url($uriStr);
        $queryStr = $uriArray['query'];
        parse_str($queryStr, $queryArray);
        $queryArray['page'] = "";
        $page_pagination = [
            "url" => $this->url->get("admin/reflect/search?" . http_build_query($queryArray)),
            "cur" => $pagination_cur,
            "total" => $total,
            "rows_value" => $rows_value,
            'data_total' => $data_count
        ];
        $this->view->tb_page = $page_pagination;

        // 使用普通模板
        $this->view->pick("reflect/index");
    }

    public function reflect_isAction(){
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/base.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/qst_fileinput_init.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/distpicker.data.js', false);
        $this->assets->addJs(_LIBS_ . 'libs/jsapi/distpicker.js', false);
        // 数据-页头
        $pageHeader["title"] = "提现审核";
        $pageHeader["action"]["name"] = "提现列表";
        $pageHeader["action"]["link"] = "admin/reflect";
        $this->view->page_header = $pageHeader;

        $id = $this->request->getQuery("id");

        // 导航菜单
        $this->view->nav_menu = array_merge($this->view->nav_menu, array(array("name" => $pageHeader["title"])));

        $refData = [
            'id' => $id
        ];

        // 表单数据
        $form = new ReflectIsForm($refData);
        $form->setAction("admin/reflect/update");
        $this->view->form = $form;
        $this->view->pick("reflect/reflectAdd");
    }

    public function updateAction(){
        $this->db->begin();
        $id = $this->request->getPost("id");
        $mess = $this->request->getPost("mess");
        $is_access = $this->request->getPost("is_access");
        $vstate = empty($is_access)? 1:2;
        $refData = PayLog::findFirst('id = ' . ($id - 1000));
        if(!empty($refData->id)){
            $refData->htuserid = $this->session->get('auth-identity')['id'];
            $refData->mess = $mess;
            $refData->vstate = $vstate;
            $refData->etime = time();
        }

        //等于1时不同意提现
        if($is_access == 1){
            $refData->id = '';
            $refData->AddSub = 0;
            if($refData->save() == false){
                $this->db->rollback();
            }
            if(empty($refData->fancheise_id)){
                echo '审核异常！';
                exit;
            }
            $orderData = Franchise::findFirstById($refData->fancheise_id);
            $orderData->balance =  $orderData->balance + $refData->totalprice;
            if($orderData->update() == false){
                $this->db->rollback();
            }
        }else{
            $refData->AddSub = 1;
            if($refData->save() == false){
                $this->db->rollback();
            }
        }
        $this->db->commit();
        $this->response->redirect("admin/reflect/search");
    }

    private function getState($state){
        $str = '待审核';
        switch($state){
            case 1:
                $str = '已通过';
                break;
            case 2:
                $str = '拒绝提现';
                break;
            case 3:
                $str = '未通过';
                break;
        }
        return $str;
    }
    //获取用户信息
    private function getUserInfo($userid,$type){
        $str ='';
        if(empty($userid)){
            return;
        }
        if($type == 3){
            $datas = Users::findFirst('id = ' . $userid);
            $str = $datas->account;
        }else{
            $userData = MemberInfo::findFirst('userid = ' . $userid);
            $str = $userData->nick;
        }
        return $str;
    }
    //判断是否是审核不通过记录
    private function isRelectFail($id,$vstate){
        $str = $vstate;
        if(!empty($id) && empty($vstate)){
            $count = PayLog::count('ordercode ='.$id);
            if($count == 2){
                $str = 2;
            }
        }
        return $str;
    }

}
